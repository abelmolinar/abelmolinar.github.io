:root {
    --white: rgb(255, 255, 255);
    --dark-black: rgba(0, 0, 0, 0.85);
    --grey: rgba(51, 51, 51, 1);
    --red: rgb(255, 0, 0);
    --crimson: rgb(220, 20, 60);
    --lightcoral: rgb(240, 128, 128);
}

header{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

h1, h2, p{
    color: var(--white);
}

body{
    background-color: var(--dark-black);
}

.header-div{
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    background-color: var(--grey);
    width: 100%;
    max-width: 800px;
    margin: 25px auto 30px;
    height: 100px;
    font-size: 1.5rem;
}

.logo{
    color: var(--white);
    font-weight: bold;
    font-size: 2rem;
}

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 0;
    overflow: hidden;
}

.nav-links {
    display: flex;
    list-style: none;
}

.nav-links li {
    margin-left: 30px;
}

.nav-links a{
    text-decoration: none;
    color: var(--white);
}

.nav-links a:hover{
    color: var(--crimson);
}

.container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: var(--grey);
    text-align: justify;
    align-items: center;
    width: 100%;
    max-width: 800px;
    box-sizing: border-box; /* This makes it so the padding is included in the width, i.e. no need to do annoying math */
    padding-right: 10px;
    padding-left: 10px;
    margin: 0 auto 30px;
    line-height: 1.5;
    font-size: 1.2rem;
}

.container h1{
    text-align: center;
    margin-top: 0;
    margin-bottom: 0px;
}

.container h2{
    text-align: center;
    margin-bottom: 0px;
    font-size: 1.5rem;
}

.container p{
    margin-top: 0px;
    margin-bottom:10px;
}

.container :first-child{
    margin-top: 10px !important;
}
/* !important is there to force container top and bottom content margins to remain the same no matter the element */
.container :last-child{
    margin-bottom:10px !important;
}

.red-button {
    display: inline-block;
    padding: 10px 20px;
    background-color: var(--red);
    color: var(--white);
    text-align: center;
    text-decoration: none;
    border-radius: 25px;
    border: none;
    font-size: 16px;
    transition: background-color 0.3s;
}

.red-button:hover {
    background-color: var(--crimson);
}

.control-diagram{
    width: 90%;
}

.img-caption{
    margin: -10px 0 15px 0;
    text-align: center;
}

.link, .link h2{
    color: var(--white);
}
.link:hover, .link:hover h2{
    color: var(--lightcoral);
    text-decoration-color: var(--lightcoral);
}

.social-media-links a{
    text-decoration: none;
    color: var(--white);
}
.social-media-links a:hover{
    color: var(--crimson);
}

.footer {
    text-align: center;
    padding: 20px;
    background-color: var(--grey);
    margin: 0 auto;
    box-sizing: border-box;
    padding: 5px;
    bottom: 0;
    width: 100%;
    max-width: 800px;
}

.footer :first-child{
    margin-top: 10px !important;
}
/* !important is there to force container top and bottom content margins to remain the same no matter the element */
.footer :last-child{
    margin-bottom:10px !important;
}


/* Responsive design */
@media (max-width: 768px) {
    .about-content {
        flex-direction: column;
    }
    
    .nav-links {
        display: none; /* You would implement a mobile menu here */
    }
    
    .hero-content h1 {
        font-size: 2.2rem;
    }
}
